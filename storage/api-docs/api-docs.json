{
    "openapi": "3.0.0",
    "info": {
        "title": "Tasks Api",
        "description": "To Do Task Api",
        "version": "1.0.0"
    },
    "paths": {
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get paginated list of categories",
                "operationId": "3f5817a34833d0a1f4af4548dd3aeaba",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Category"
                                            }
                                        },
                                        "last_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "operationId": "71fcad552bb0eaba9fb191fd8d8dcab0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/categories/{category}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get specific category",
                "operationId": "e92579e78391b6199e78c2a091dbea0a",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update a category",
                "operationId": "02aa39951e67916277e28086f85909c8",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "operationId": "d9ecd5c4a74c4d75339251863eedc08c",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category deleted successfully"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/api/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get list of tasks",
                "operationId": "471d938a3bfaeb6fbd981d7c3e2728b0",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter_type",
                        "in": "query",
                        "description": "Filter type (today, pending, overdue)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "today",
                                "pending",
                                "overdue"
                            ]
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Filter by title (partial match)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Filter by description (partial match)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "in_progress",
                                "completed"
                            ]
                        }
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "description": "Filter by priority",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "low",
                                "medium",
                                "high"
                            ]
                        }
                    },
                    {
                        "name": "due_date",
                        "in": "query",
                        "description": "Filter tasks due after or on this date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-08-10"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Filter by category ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tasks"
                    }
                }
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create a new task",
                "operationId": "f803ebdb2300acdb7e93bbe8d0b9a2e8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Task created successfully"
                    }
                }
            }
        },
        "/api/tasks/{task}/history": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get status history for a specific task",
                "operationId": "7bba58b41a0552ac398ea482809a45e8",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "Task ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task history returned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TaskHistory"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found"
                    }
                }
            }
        },
        "/api/tasks/{task}": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update a task",
                "operationId": "4732012736ffb7728b7e6b7949d3c140",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "Task ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task updated successfully"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete a task",
                "operationId": "3aa12cf460ff0476704f02693959d7de",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "Task ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Task deleted successfully"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CategoryRequest": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Technology"
                    }
                },
                "type": "object"
            },
            "TaskRequest": {
                "title": "Task Request",
                "description": "Schema for creating a new task",
                "required": [
                    "title",
                    "description",
                    "priority",
                    "status"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "Finish report"
                    },
                    "description": {
                        "type": "string",
                        "example": "Complete the weekly report by Friday"
                    },
                    "priority": {
                        "type": "integer",
                        "example": 1
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "completed"
                        ],
                        "example": "pending"
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-10"
                    },
                    "filter_type": {
                        "type": "string",
                        "enum": [
                            "today",
                            "pending",
                            "overdue"
                        ],
                        "example": "pending"
                    },
                    "responsible_name": {
                        "description": "Responsible name",
                        "type": "string",
                        "example": "João Silva"
                    }
                },
                "type": "object"
            },
            "TaskUpdateRequest": {
                "title": "Task Update Request",
                "description": "Schema for updating a task",
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "Update presentation"
                    },
                    "description": {
                        "type": "string",
                        "example": "Review the slides for project X"
                    },
                    "priority": {
                        "type": "integer",
                        "example": 2
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "completed"
                        ],
                        "example": "completed"
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-12"
                    },
                    "category_id": {
                        "type": "integer",
                        "example": 2
                    }
                },
                "type": "object"
            },
            "Category": {
                "title": "Category",
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Technology"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "Task": {
                "required": [
                    "title",
                    "status",
                    "priority"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Complete project report"
                    },
                    "description": {
                        "type": "string",
                        "example": "Finish the quarterly project report",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "in_progress",
                            "completed"
                        ],
                        "example": "pending"
                    },
                    "priority": {
                        "type": "string",
                        "enum": [
                            "low",
                            "medium",
                            "high"
                        ],
                        "example": "medium"
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-12-31",
                        "nullable": true
                    },
                    "completed_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-07-01T12:00:00Z",
                        "nullable": true
                    },
                    "category_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-07-01T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-07-01T12:00:00Z"
                    },
                    "responsible_name": {
                        "description": "Responsible name for the task",
                        "type": "string",
                        "example": "João Silva"
                    }
                },
                "type": "object"
            },
            "TaskHistory": {
                "required": [
                    "task_id",
                    "status",
                    "changed_at"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "task_id": {
                        "type": "integer",
                        "example": 5
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "in_progress",
                            "completed"
                        ],
                        "example": "completed"
                    },
                    "changed_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-07-01T12:00:00Z"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-07-01T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2024-07-01T12:00:00Z"
                    },
                    "task": {
                        "$ref": "#/components/schemas/Task"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Categories",
            "description": "Categories management operations"
        },
        {
            "name": "Tasks",
            "description": "Task management operations"
        }
    ]
}